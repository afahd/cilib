#!/bin/bash -e
source cost_utils.sh
NUM_DAYS=1
DURATION="day"
USER_DURATION=""
USER_DATE=""
PIPELINE_CODE=""
total_cost=0
grand_total_cost=0
no_of_pipelines=1
SEND_EMAIL="false"
WORKSPACE=/tmp/cost/
TEMP=`getopt -o U:p:T:W:ed:h --long user:,pipeline:,duration:,workspace:,email,date:,\help -n 'aurora_cost.sh' -- "$@"`
eval set -- "$TEMP"
while true ; do
 case "$1" in
  -U|--user) USER_NAME=$2 ; shift 2 ;;
  -p|--pipeline) PIPELINE_NAME=$2 ; shift 2 ;;
  -T|--duration) USER_DURATION=$2 ; shift 2 ;;
  -W|--workspace) WORKSPACE=$2 ; shift 2 ;;
  -e|--email) SEND_EMAIL="true" ; shift ;;
  -d|--date) USER_DATE=$2 ; shift 2 ;;
  -h|--help)
      show_help
      exit 0 ;;
  --) shift ; break ;;
  *)
    echo "Unrecognized option $1"
    exit 1 ;;
 esac
done
#To prevent user from using -T and -d together
if [[ -n "$USER_DURATION" && -n "$USER_DATE" ]]; then
  echo "Incorrect usage of arguments! -T and -d cannot be used together"
  exit 1
fi
# if [[ "$PIPELINE_NAME" == "all" && "$USER_NAME" == "all" ]]; then
#   echo "Fatal combination. Exiting Script !!!"
#   # exit 1
# fi
if [[ -n "$USER_DURATION" ]]; then
  DURATION="$USER_DURATION"
fi
if [[ "$DURATION" != "day" && "$DURATION" != "week" && "$DURATION" != "month" ]]; then
  echo "$USER_DURATION is an invalid value for -T. Valid values are 'day' 'week' 'month'"
  exit 1
fi
#Create workspace
if [[ -d "$WORKSPACE" ]]; then
  rm -rf ${WORKSPACE}*
else
  mkdir -p $WORKSPACE
fi
# Get number of days against duration specifed by user.
cat /dev/null > ${WORKSPACE}cost_final_report
cat /dev/null > ${WORKSPACE}the_final_log
NUM_DAYS=$(get_num_of_days $DURATION)
# Convert pipeline name to coresponding pipeline cost code
for num in `seq 1 $NUM_DAYS`; do
  report_file=$(get_report $WORKSPACE $num $USER_DATE)
  cat $report_file >> ${WORKSPACE}the_final_log
done
time_total=0
if [[ -n "$PIPELINE_NAME" && "$PIPELINE_NAME" != "all" ]]; then
  echo "" >> ${WORKSPACE}cost_final_report
  echo "Cost for specified pipeline is as follows: " >> ${WORKSPACE}cost_final_report
  echo "" >> ${WORKSPACE}cost_final_report
  PIPELINE_CODE=$(get_pl_cost_code $PIPELINE_NAME)
  PIPELINE_CODE="\-p-$PIPELINE_CODE-"
  extracted_report=$(extract_pattern "$PIPELINE_CODE" "${WORKSPACE}the_final_log" "pipeline_report" "$WORKSPACE" "$USER_NAME")
  total_time=$(get_time_spent "$extracted_report" "$WORKSPACE" "$PIPELINE_CODE")
  ttime=$(time_run $total_time)
  cost=$(get_cost_spent $total_time)
  total_cost=$(echo "$total_cost+$cost" | bc -l)
  echo "Cost for $PIPELINE_NAME = \$$cost Approximate Duration $ttime" >> ${WORKSPACE}cost_final_report
  echo "" >> ${WORKSPACE}cost_final_report
  rm -rf ${WORKSPACE}tmp*
  rm -rf ${WORKSPACE}pipeline_report



elif [[ -n $USER_NAME && $USER_NAME != "all" && $PIPELINE_NAME != "all" ]]; then
  echo "" >> ${WORKSPACE}cost_final_report
  echo "Cost for specified user is as follows: " >> ${WORKSPACE}cost_final_report
  echo "" >> ${WORKSPACE}cost_final_report
  extracted_report=$(extract_pattern "$PIPELINE_CODE" "${WORKSPACE}the_final_log" "user_report" "$WORKSPACE" "$USER_NAME")
  total_time=$(get_time_spent "$extracted_report" "$WORKSPACE" "$USER_NAME")
  ttime=$(time_run $total_time)
  cost=$(get_cost_spent $total_time)
  total_cost=$(echo "${total_cost}+$cost" | bc -l)
  echo "Cost for $USER_NAME = \$$cost Approximate duration $ttime" >> ${WORKSPACE}cost_final_report
  rm -rf ${WORKSPACE}tmp*
  rm -rf ${WORKSPACE}user_report
fi


if [[ "$PIPELINE_NAME" == "all" ]]; then
  echo "" >> ${WORKSPACE}cost_final_report
  echo "Cost for all pipelines are as follows: " >> ${WORKSPACE}cost_final_report
  echo "" >> ${WORKSPACE}cost_final_report
  extrat_for_all_pipelines "$WORKSPACE" "${WORKSPACE}the_final_log"
fi

if [[ -n "$USER_NAME" && $USER_NAME == "all" ]]; then
  echo "" >> ${WORKSPACE}cost_final_report
  echo "Cost for all users are as follows: " >> ${WORKSPACE}cost_final_report
  echo "" >> ${WORKSPACE}cost_final_report
  extract_for_all_users "${WORKSPACE}the_final_log" "all_user_report" "$WORKSPACE" "$USER_NAME"
fi


cat ${WORKSPACE}cost_final_report
rm -rf ${WORKSPACE}the_final_log

