#!/bin/bash

BUILD_ID=$1
PIPELINE="falcon"
PROJECT="alps"
BRANCH="master"
BUILDID_FILE=${WORKSPACE}/logs/build_id
FALCON_SCRIPT="${WORKSPACE}/gcloud/build/aurora/init_scripts/falcon_build.sh"


## if the build is specified it would be used, and if buildid file exists, that build id would be used,
## otherwise  aurora build would be run
if [[ -n ${BUILD_ID} ]]; then
  #Received BUILD_ID as an argument
  echo "${BUILD_ID} provided as parameter"
  elif [[ -e ${BUILDID_FILE} ]]; then
    echo "Build id file exists, path to build id file is ${BUILDID_FILE}"
    IFS="=" read -r id BUILD_ID<${BUILDID_FILE}
    else
      tag=$(uuidgen | cut -d '-' -f 1)
      TAG="atc${tag}"
      echo "No file found with build id or build id specified creating new build with tag $TAG"
      aurora build -p ${PROJECT} -b ${BRANCH} --tag ${TAG} --script ${FALCON_SCRIPT}
      bld_retval=$?

    if [[ $bld_retval -ne 0 ]]; then
      #Build could neither be read as a parameter or file, nor created! Lady luck is so not on your side today!
      echo "aurora build failed"
      exit $bld_retval
    fi

    #Reading teh newly created BUILD_ID
    IFS="=" read -r id BUILD_ID<${BUILDID_FILE}
fi

# Initiating aurora pipeline run to validate falcon infra
aurora pipeline -l $BUILD_ID -P $PIPELINE -W ${WORKSPACE}/logs/test_falcon_pipeline

pipeline_retval=$?
if [[ "$pipeline_retval" -ne 0 ]]; then
    echo "FAILED"
else
    echo "PASSED"
fi

exit $pipeline_retval
