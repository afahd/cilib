#!/bin/bash

function show_run_tests_help() {
    cat << HELP
-------------------------------------------------------------------------------
USAGE: aurora pipeline -l <BUILD-ID> -P <pipeline-name> [OPTIONS]
       Run all test cases in the specified pipeline.

Required Arguments:
  -l, --buildid             Build-ID against which you want to run test cases
  -P, --pipeline            The pipeline which you want to run.
                            Possible values are "smoke", "extended", "unstable", "automaton", "pgui-smoke", "omni", "coral-smoke".
                            (Default is 'smoke')

Optional Arguments:
  -i, --test_iterations     Number of iterations, script needs to run
                            Default is '1'.
  -f, --first_test          Starting ctest number
                            Default is to start from '1'.
  -t, --step_size           Number of tests to run as part of one script.
                            Default is '50'.
  -n, --num_instances       Number of cloud instances among which you want to distribute these tests
                            Default is '10'.
  -d, --script_dir          Directory where you want to generate your scripts
                            Default is /tmp/<email-id>-run-<modified_refspec><timestamp>
                            /tmp/trauf-run-81-11281-1-2015_01_17_14:34:59
  -c, --commit              SHA-1 HASH of the commit to apply
                            Supplying this arguments enables the transfer of local changes to the cloud instance.
                            The changes can be specified by the SHA-1 hash of a local commit.
                            All changes up to that commit are applied on the instance on the corresponding
                            branch.
  -a, --alps-path           Specify the path to the local alps repository
                            Default is /home/${USER}/work/alps
  -I, --initial_run         [OPTIONAL} Set it, if you are running it first time.
-------------------------------------------------------------------------------
HELP
}

function show_flag_help() {
    cat << HELP
-------------------------------------------------------------------------------
USAGE: aurora flag -l <BUILD-ID> -p <pl_failing_test_list> [OPTIONS]

Required Arguments:
  -l, --buildid                 Build-ID against which you want to run test cases
  -p, --pl_failing_test_list    List of test cases which failed in current run of pipeline.
  -b, --branch                  Branch to mark the test cases unstable.


Optional Arguments:
  -W, --WORKSPACE           Set the workspace where all the logs will be stored.
  -K, --keep-running        Instance will be left running after aurora run ends.
  -i, --test_iterations     Number of iterations, script needs to run
                            Default is '10'.
  -n, --num_instances       Number of cloud instances on which you want to run these tests
                            Default is '10'.
  -D, --db                  Database holding all the failing test cases.
  -a, --alps-path           Path to the local alps repository.
-------------------------------------------------------------------------------
HELP
}

function show_gen_test_scripts_help() {
    cat << HELP
build
  Run all test cases
  -b, --base_script         Script which you want to use as a base.
  -i, --test_iterations     [OPTIONAL] Number of iterations, script needs to run
                            Default is '1'.
  -f, --first_test          [OPTIONAL} Starting ctest number
                            Default is to start from '1'.
  -n, --num_instances       [OPTIONAL} Number of cloud instances among which you want to distribute these tests
                            Default is '10'.
  -t, --step_size           [OPTIONAL] Number of tests to run as part of one script.
                            Default is '50'.
  -d, --script_dir          [OPTIONAL} Directory where you want to generate your scripts
                            Default is /tmp/<gerrit-id>-run-<modified_refspec><timestamp>
                            /tmp/trauf-run-81-11281-1-2015_01_17_14:34:59
  -I, --initial_run         [OPTIONAL} Set it, if you are running it first time.
HELP
}

function show_pl_help() {
  show_run_tests_help
  show_gen_test_scripts_help
}

function show_hunt_help() {
    cat << HELP

USAGE: aurora hunt -l <BUILD-ID> -s <TEST-SCRIPT> -c <commit-hash-file> [OPTIONS]

       Get your changes mentioned in commit-hash and push it to the cloud instances.
       Runs the tests specified in the test-script on cloud instances.
       Repeat above steps for all commits given in commit-hash-files.

Required Arguments:
  -l, --build-id              Build on which to run the tests.
  -s, --script                Path to a local file containing the names of tests to run.
                              Currently only non-automaton tests are supported.

  -c, --commit_hash_file      File containing SHA-1 hashs of the existing commits against which
                              you want to run your test cases.
                              ***** OR *****
  -m, --num_last_commits      Define your area of search. Tell how many last commits you want
                              to probe.
Optional Arguments:
  -W, --WORKSPACE             Set the workspace where all the logs will be stored.
  -K, --keep-running          Instance will be left running after aurora run ends.
  -i, --test_iterations       Specify the number of iterations for the tests.
                              Default=1
  -n, --num_instances         Run concurrently on the specified number of instances.
                              Default=1

  -a, --alps-path             Optionally specify the path to the local alps repository
                              Default is /home/${USER}/work/alps

EXAMPLE:
  aurora hunt -l bld-stable-4-0 -s /home/plumgrid/test1.txt -c ~/Desktop/commit_hash_file
HELP
}

