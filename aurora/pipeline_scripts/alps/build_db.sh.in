#!/bin/bash
source pl_settings.conf

# read the options
TEMP=`getopt -o D:d:h --long db:,log_dir:,\help -n 'build_db.sh' -- "$@"`
eval set -- "$TEMP"

# extract options and their arguments into variables.
while true ; do
  case "$1" in
    -D|--db)
      DB=$2 ; shift 2 ;;
    -d|--log_dir)
      LOG_DIR=$2 ; shift 2 ;;
    -h|--help)
      show_help
      exit 0 ;;
    --) shift ; break ;;
    *) exit 1 ;;
  esac
done

if [ ! -e "$DB" ] ; then
  echo "DB Does not exist, creating it now"
  sqlite3 $DB "create table tests (Name STRING PRIMARY KEY, ID INTEGER, RunTime REAL, Status TEXT);"
fi
FAILING_TESTS=`find ${LOG_DIR} | grep FAIL`
ALL_TESTS=`find ${LOG_DIR} | grep "\.log$" | grep -v trace_collector.12349.log | grep -v "/nginx/" | grep -v "/sal/" | grep -v "/test.log" | grep -v "/test_perf.log"`
for TEST in $ALL_TESTS; do
  TestTime=$(grep "Total Test time" $TEST | tr -s " " | cut -d ' ' -f 6)
  TestID=$(grep "Test *#[0-9]*" $TEST | tr -s " " | cut -d ' ' -f 3 | tr -d ':' | tr -d '#')
  TestName=$(echo $TEST | rev | cut -d'/' -f 1 | rev)

  # echo "[$TestName] RUNTIME : $TestTime"
  if [[ $TestTime == "" ]] ; then
      echo "Skipping $TEST"
  else
    TNAME=$(echo $TestName | cut -d '.' -f 1)
    TST=$(echo $TEST | grep -o "FAILED" || echo "PASSED")
    echo "Adding to DB :: [$TestID] $TNAME $TestTime $TST"
    sqlite3 $DB "insert into tests (Name, ID, RunTime, Status) values ('$TNAME', '$TestID', '$TestTime', '$TST');"
  fi
done
TotalTestRuntime=$(sqlite3 $DB "select sum(RunTime) from tests;")
MaxTestID=$(sqlite3 $DB "select max(id) from tests;")
TestCount=$(sqlite3 $DB "select count(id) from tests;")
sqlite3 $DB "select id from tests order by id;" > /tmp/test_ids
echo "No of Tests : $TestCount"
echo "Last Test ID: $MaxTestID"
echo "TotalRunTime: $TotalTestRuntime"
echo "Missing test Results :"
awk '$1!=p+1{print p+1"-"$1-1}{p=$1}' /tmp/test_ids

