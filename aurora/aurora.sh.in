#!/bin/bash -e
export PATH=@CMAKE_BINARY_DIR@/:/opt/pg/scripts:$PATH
. aurora_utils.sh

function show_help() {
    cat << ENDHELP
init                        : Setup aurora environment
build <Gerrit-RefSpec> <Project> <Branch>
                      : Build a new image with given COMMIT-ID/TAG/LOCAL-CHANGES.
run <Build ID> <Test Script>
                      :  Run test script on cloud instance with aurora BUILD-ID.
upload_to_docker <File To Upload> <Destination Path>
                      : Upload some local file to docker container.
download_from_docker <Location of File to download> <Path where you need to keep>
                      : Download file from docker container to local machine.
ls instance
                      : List all cloud instances currently running by user
ls snapshots
                      : List all cloud snapshots currently running by user
delete instances <regex>
                      : Deletes the instance specified
delete snapshots <regex>
                      : Deletes the snapshots specified
login <instance name>
                      : Login to the specified instance
ENDHELP
}

case $1 in
    --help)
        show_help
      ;;
    init)
      init_id
      ;;
    ls)
      if [[ $2 == "instances" ]] ; then
        list_instances
      elif [[ $2 == "snapshots" ]] ; then
        list_snapshots
      else
        echo "ERROR: invalid second argument $2: It can be either 'instances' or 'snapshots'"
      fi
      ;;
    delete)
      if [[ $2 == "instances" ]] ; then
        delete_instances ${3} ${4}
      elif [[ $2 == "snapshots" ]] ; then
        delete_snapshots ${3} ${4}
      else
        echo "ERROR: invalid second argument $2: It can be either 'instances' or 'snapshots'"
      fi

      ;;
    login)
      login_instance ${2}
      ;;
    build)
      aurora_build.sh -Q build -R 1 -E 14 -G ${2} -P ${3} -B ${4}
      ;;
    run)
      UUID=`uuidgen`
      SUUID_="${UUID##*-}"
      SUUID="${SUUID_,,}"
      aurora_run.sh -Q run -R 1 -E 11 -B ${2} -T ${3} -U ${SUUID}
      ;;
    upload_to_docker)
      aurora_utils.sh -Q upload_to_docker -R 4 -E 10 -F $2 -P $3
    ;;
    download_from_docker)
      aurora_utils.sh -Q download_from_docker -R 1 -E 2 -F $2 -P $3
    ;;
    *)
        echo "USAGE:"
        show_help
    ;;
esac
